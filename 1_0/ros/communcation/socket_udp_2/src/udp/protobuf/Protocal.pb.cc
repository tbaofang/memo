// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protocal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Protocal.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class PBindNameDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PBindName>
     _instance;
} _PBindName_default_instance_;
class PChatDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PChat>
     _instance;
} _PChat_default_instance_;
class PRoomInformationDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<PRoomInformation>
     _instance;
} _PRoomInformation_default_instance_;

namespace protobuf_Protocal_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBindName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PBindName, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PChat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PChat, information_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInformation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInformation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRoomInformation, information_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(PBindName)},
  { 6, -1, sizeof(PChat)},
  { 12, -1, sizeof(PRoomInformation)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PBindName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PChat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PRoomInformation_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Protocal.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PBindName_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PBindName_default_instance_);_PChat_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PChat_default_instance_);_PRoomInformation_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_PRoomInformation_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016Protocal.proto\"\031\n\tPBindName\022\014\n\004name\030\001 "
      "\001(\t\"\034\n\005PChat\022\023\n\013information\030\001 \001(\t\"5\n\020PRo"
      "omInformation\022\014\n\004name\030\001 \001(\t\022\023\n\013informati"
      "on\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 136);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Protocal.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Protocal_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBindName::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBindName::PBindName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Protocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBindName)
}
PBindName::PBindName(const PBindName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:PBindName)
}

void PBindName::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PBindName::~PBindName() {
  // @@protoc_insertion_point(destructor:PBindName)
  SharedDtor();
}

void PBindName::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBindName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PBindName::descriptor() {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBindName& PBindName::default_instance() {
  protobuf_Protocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

PBindName* PBindName::New(::google::protobuf::Arena* arena) const {
  PBindName* n = new PBindName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PBindName::Clear() {
// @@protoc_insertion_point(message_clear_start:PBindName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PBindName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBindName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PBindName.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBindName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBindName)
  return false;
#undef DO_
}

void PBindName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBindName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBindName.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PBindName)
}

::google::protobuf::uint8* PBindName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PBindName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PBindName.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBindName)
  return target;
}

size_t PBindName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBindName)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PBindName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBindName)
  GOOGLE_DCHECK_NE(&from, this);
  const PBindName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBindName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBindName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBindName)
    MergeFrom(*source);
  }
}

void PBindName::MergeFrom(const PBindName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBindName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PBindName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBindName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBindName::CopyFrom(const PBindName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBindName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBindName::IsInitialized() const {
  return true;
}

void PBindName::Swap(PBindName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBindName::InternalSwap(PBindName* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PBindName::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PBindName

// string name = 1;
void PBindName::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PBindName::name() const {
  // @@protoc_insertion_point(field_get:PBindName.name)
  return name_.GetNoArena();
}
void PBindName::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBindName.name)
}
#if LANG_CXX11
void PBindName::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBindName.name)
}
#endif
void PBindName::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBindName.name)
}
void PBindName::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBindName.name)
}
::std::string* PBindName::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PBindName.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PBindName::release_name() {
  // @@protoc_insertion_point(field_release:PBindName.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PBindName::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PBindName.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PChat::kInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PChat::PChat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Protocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PChat)
}
PChat::PChat(const PChat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.information().size() > 0) {
    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
  // @@protoc_insertion_point(copy_constructor:PChat)
}

void PChat::SharedCtor() {
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PChat::~PChat() {
  // @@protoc_insertion_point(destructor:PChat)
  SharedDtor();
}

void PChat::SharedDtor() {
  information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PChat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PChat::descriptor() {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PChat& PChat::default_instance() {
  protobuf_Protocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

PChat* PChat::New(::google::protobuf::Arena* arena) const {
  PChat* n = new PChat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PChat::Clear() {
// @@protoc_insertion_point(message_clear_start:PChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PChat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PChat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string information = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_information()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->information().data(), static_cast<int>(this->information().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PChat.information"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PChat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PChat)
  return false;
#undef DO_
}

void PChat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string information = 1;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->information().data(), static_cast<int>(this->information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PChat.information");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->information(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PChat)
}

::google::protobuf::uint8* PChat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PChat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string information = 1;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->information().data(), static_cast<int>(this->information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PChat.information");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->information(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PChat)
  return target;
}

size_t PChat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PChat)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string information = 1;
  if (this->information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->information());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PChat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PChat)
  GOOGLE_DCHECK_NE(&from, this);
  const PChat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PChat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PChat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PChat)
    MergeFrom(*source);
  }
}

void PChat::MergeFrom(const PChat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PChat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.information().size() > 0) {

    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
}

void PChat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PChat::CopyFrom(const PChat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PChat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PChat::IsInitialized() const {
  return true;
}

void PChat::Swap(PChat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PChat::InternalSwap(PChat* other) {
  using std::swap;
  information_.Swap(&other->information_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PChat::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PChat

// string information = 1;
void PChat::clear_information() {
  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PChat::information() const {
  // @@protoc_insertion_point(field_get:PChat.information)
  return information_.GetNoArena();
}
void PChat::set_information(const ::std::string& value) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PChat.information)
}
#if LANG_CXX11
void PChat::set_information(::std::string&& value) {
  
  information_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PChat.information)
}
#endif
void PChat::set_information(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PChat.information)
}
void PChat::set_information(const char* value, size_t size) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PChat.information)
}
::std::string* PChat::mutable_information() {
  
  // @@protoc_insertion_point(field_mutable:PChat.information)
  return information_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PChat::release_information() {
  // @@protoc_insertion_point(field_release:PChat.information)
  
  return information_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PChat::set_allocated_information(::std::string* information) {
  if (information != NULL) {
    
  } else {
    
  }
  information_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), information);
  // @@protoc_insertion_point(field_set_allocated:PChat.information)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PRoomInformation::kNameFieldNumber;
const int PRoomInformation::kInformationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PRoomInformation::PRoomInformation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Protocal_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PRoomInformation)
}
PRoomInformation::PRoomInformation(const PRoomInformation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.information().size() > 0) {
    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
  // @@protoc_insertion_point(copy_constructor:PRoomInformation)
}

void PRoomInformation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  information_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PRoomInformation::~PRoomInformation() {
  // @@protoc_insertion_point(destructor:PRoomInformation)
  SharedDtor();
}

void PRoomInformation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  information_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PRoomInformation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRoomInformation::descriptor() {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PRoomInformation& PRoomInformation::default_instance() {
  protobuf_Protocal_2eproto::InitDefaults();
  return *internal_default_instance();
}

PRoomInformation* PRoomInformation::New(::google::protobuf::Arena* arena) const {
  PRoomInformation* n = new PRoomInformation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PRoomInformation::Clear() {
// @@protoc_insertion_point(message_clear_start:PRoomInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PRoomInformation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PRoomInformation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PRoomInformation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string information = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_information()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->information().data(), static_cast<int>(this->information().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "PRoomInformation.information"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PRoomInformation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PRoomInformation)
  return false;
#undef DO_
}

void PRoomInformation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PRoomInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRoomInformation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string information = 2;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->information().data(), static_cast<int>(this->information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRoomInformation.information");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->information(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PRoomInformation)
}

::google::protobuf::uint8* PRoomInformation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PRoomInformation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRoomInformation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string information = 2;
  if (this->information().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->information().data(), static_cast<int>(this->information().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "PRoomInformation.information");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->information(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PRoomInformation)
  return target;
}

size_t PRoomInformation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PRoomInformation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string information = 2;
  if (this->information().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->information());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRoomInformation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PRoomInformation)
  GOOGLE_DCHECK_NE(&from, this);
  const PRoomInformation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PRoomInformation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PRoomInformation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PRoomInformation)
    MergeFrom(*source);
  }
}

void PRoomInformation::MergeFrom(const PRoomInformation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PRoomInformation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.information().size() > 0) {

    information_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.information_);
  }
}

void PRoomInformation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PRoomInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRoomInformation::CopyFrom(const PRoomInformation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PRoomInformation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRoomInformation::IsInitialized() const {
  return true;
}

void PRoomInformation::Swap(PRoomInformation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PRoomInformation::InternalSwap(PRoomInformation* other) {
  using std::swap;
  name_.Swap(&other->name_);
  information_.Swap(&other->information_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PRoomInformation::GetMetadata() const {
  protobuf_Protocal_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Protocal_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PRoomInformation

// string name = 1;
void PRoomInformation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PRoomInformation::name() const {
  // @@protoc_insertion_point(field_get:PRoomInformation.name)
  return name_.GetNoArena();
}
void PRoomInformation::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PRoomInformation.name)
}
#if LANG_CXX11
void PRoomInformation::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PRoomInformation.name)
}
#endif
void PRoomInformation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PRoomInformation.name)
}
void PRoomInformation::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PRoomInformation.name)
}
::std::string* PRoomInformation::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:PRoomInformation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PRoomInformation::release_name() {
  // @@protoc_insertion_point(field_release:PRoomInformation.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PRoomInformation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PRoomInformation.name)
}

// string information = 2;
void PRoomInformation::clear_information() {
  information_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PRoomInformation::information() const {
  // @@protoc_insertion_point(field_get:PRoomInformation.information)
  return information_.GetNoArena();
}
void PRoomInformation::set_information(const ::std::string& value) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PRoomInformation.information)
}
#if LANG_CXX11
void PRoomInformation::set_information(::std::string&& value) {
  
  information_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PRoomInformation.information)
}
#endif
void PRoomInformation::set_information(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PRoomInformation.information)
}
void PRoomInformation::set_information(const char* value, size_t size) {
  
  information_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PRoomInformation.information)
}
::std::string* PRoomInformation::mutable_information() {
  
  // @@protoc_insertion_point(field_mutable:PRoomInformation.information)
  return information_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PRoomInformation::release_information() {
  // @@protoc_insertion_point(field_release:PRoomInformation.information)
  
  return information_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PRoomInformation::set_allocated_information(::std::string* information) {
  if (information != NULL) {
    
  } else {
    
  }
  information_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), information);
  // @@protoc_insertion_point(field_set_allocated:PRoomInformation.information)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
